{
  "name": "zez-code-ai",
  "displayName": "Zez Code AI",
  "description": "O Zez Code AI para Java é uma extensão indispensável para desenvolvedores Java que utilizam o VSCode e buscam simplificar e aprimorar seu processo de criação de testes. Com esta ferramenta, você pode analisar funções específicas do seu código de forma rápida e eficiente, gerando automaticamente cenários de teste completos e personalizados, incluindo mocks para funções chamadas. Seja você um desenvolvedor experiente ou iniciante, esta extensão tornará seus testes mais robustos e fáceis de implementar.",
  "version": "0.0.2",
  "publisher": "ZezTechnology",
  "icon": "images/zezcodelogo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Zezoca29/zez-code-ai.git"
  },
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "java",
    "testing",
    "unit-test",
    "ai",
    "llm",
    "code-generation",
    "test-generation",
    "mockito",
    "junit"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Zezoca29/zez-code-ai/issues"
  },
  "homepage": "https://github.com/Zezoca29/zez-code-ai#readme",
  "main": "./dist/extension.js",
  "activationEvents": [
    "onCommand:zez-code-ai.helloWorld",
    "onCommand:extension.analyzeJavaFunction",
    "onCommand:extension.clearParserCache",
    "onCommand:extension.completeTestWithLLM",
    "onCommand:extension.showLLMPrompt"
  ],
  "contributes": {
    "commands": [
      {
        "command": "zez-code-ai.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "extension.analyzeJavaFunction",
        "title": "Analisar Função Java (Zez Code AI)"
      },
      {
        "command": "extension.clearParserCache",
        "title": "Limpar Cache do Parser (Zez Code AI)"
      },
      {
        "command": "extension.completeTestWithLLM",
        "title": "Completar Teste com LLM (Zez Code AI)"
      },
      {
        "command": "extension.showLLMPrompt",
        "title": "Mostrar Prompt LLM (Zez Code AI)"
      }
    ]
  },
  "scripts": {
    "clean": "rimraf dist out",
    "vscode:prepublish": "npm run package",
    "build": "tsc -p ./",
    "compile": "tsc -p ./",
    "watch": "npm-run-all --parallel watch:tsc watch:esbuild",
    "watch:tsc": "tsc --watch",
    "watch:esbuild": "esbuild src/extension.ts --bundle --outfile=out/extension.js --platform=node --watch",
    "watch-tests": "tsc -p . -w --outDir out",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "rimraf": "^6.0.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "java-parser": "^3.0.1"
  }
}
